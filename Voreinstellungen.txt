# Voreinstellungen


### Dateiformat 

Bevor Du loslegen kannst sollten ein paar Voreinstellungen gemacht werden. In der aktuellen Version besteht das Programm aus drei Dateien, in in der Processing App als drei Tabs dargestellt werden. 
Der erste Tab heißt genau so, wie die aktuelle Version des Programms. Alle Voreinstellung sind hier zu erledigen. 
Zu Beginn tauchen zwei Zeilen auf: 

```
String saveFormat = "png";
String myPath = "";
```
Die Zeile **saveFormat** gibt das Dateiformat für die einfache Bildspeicherung **saveFrame()** vor. Neben 'png' sind 'tif', 'tga' und 'jpg' möglich. 

---

### Speicherpfad 

In der Zeile **myPath** gibst Du an, wo deine Bilder gespeichert werden sollen. Bleibt Die Zeile leer werden Bilder direkt neben den Programmdateien gespeichert. Bei einem Update des Programmordners würden sie dort verloren gehen. Dateipfade werden in Anführungszeichen angegeben.
 
```
String myPath = "/Users/andi/Desktop/screenShots/"; 
```

Auf dem Mac kannst Du mit Hilfe der **Terminal App** ganz einfach einen Dateipfad ermitteln. Die App findest Du unter Programme -> Andere.  
Du brauchst nur den gewünschten Ordner auf die Terminal App zu ziehen schon bekommst Du den Pfad ausgegeben. 


----

### Bildschirmauflösung 

Weiter gehts es etwa bei Zeile 30, innerhalb der Setup-Funktion.  

```
pixelDensity(1);
```

Bei der Benutzung eines hochauflösenden Displays wie kann **pixelDensity** auf **2** gesetzt werden. Bei werden einem 13" Macbook werden so vom Bildschirm Dateien mit 2880 x 1800 Pixeln gerendert.

--- 

### Font laden

```
mainFont = createFont("HelveticaNeue-Light",200);
```

Hier kann nun ein Wunsch-Font geladen werden. Die Funktion **createFont()** erwartet neben dem Dateiname auf jeden Fall auch eine Größe. Dateinamen werden wie Pfade in Anführungszeichen gesetzt. 

---

### Schriftgröße min/max

Etwa bei Zeile 56 geht es weiter mit Angaben für die minimale und anschließend maximale Schriftgröße. Hier muss man sich unter Umständen ein wenig heran tasten. 


```
minFSize = 160;
maxFSize = longSide *1.5;
```

---

### Sättigung und Helligkeit der Farben

Die App verwendet den HSB-Farbraum (Hue, Saturation, Brightness).
Während der Wert für den Farbton **Hue** zufällig bestimmt wird werden Sättigung und Helligkeit hier über **mySatur** und **myBright** vorgegeben. Beide Variablen akzeptieren Werte zwischen 0 und 99.

```
mySatur = 76;
myBright = 80;
```

### Transparenz 

Mit den letzten Beiden Werten werden die Unter- und Obergrenze für den Alpha-Kanal also die transparenz vorgegeben. Beide Variablen akzeptieren Werte zwischen 0 und 99.

minAlpha = 92;
maxAlpha = 99;
```